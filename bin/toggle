#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import sys
import glob
import shutil
import itertools

from argparse import ArgumentParser

sys.dont_write_bytecode = True

def toggle_filter(line, marker, padding):
    left = marker + padding
    right = padding + marker
    if line.startswith(left):
        line = line[len(left):] + right
    elif line.endswith(right):
        line = left + line[:-len(right)]
    return line.rstrip(' ')

def toggle_file(filepath, marker, padding, trial, show):
    filepath_toggle = filepath + '.toggle'
    lines = open(filepath).read().split('\n')
    lines = [toggle_filter(line, marker, padding) for line in lines]
    text = '\n'.join(lines)
    if show:
        print(text)
    with open(filepath_toggle, 'w') as f:
        f.write(text)
    if not trial:
       shutil.move(filepath_toggle, filepath)

def toggle_dir(dirpath, marker, padding, trial, show):
    filepaths = os.path.listdir(dirpath)
    for filepath in filepaths:
        toggle_file(filepath, marker, padding, trial, show)

def toggle(ns):
    paths = itertools.chain(*[glob.glob(target) for target in ns.targets])
    for path in paths:
        if os.path.isdir(path):
            if ns.allow_directories:
                toggle_directory(path, ns.marker, ns.padding, ns.trial, ns.show)
            else:
                print('add -d|--allow-directories to toggle path={0}'.format(path))
        elif os.path.isfile(path):
            toggle_file(path, ns.marker, ns.padding, ns.trial, ns.show)
        else:
            raise Exception(path)

if __name__ == '__main__':
    parser = ArgumentParser()
    parser.add_argument(
        '-m', '--marker',
        default='##',
        help='default="%(default)s"; change the marker string')
    parser.add_argument(
        '-p', '--padding',
        default=' ',
        help='default="%(default)s"; change the padding string')
    parser.add_argument(
        '-d', '--allow-directories',
        action='store_true',
        help='default="%(default)s"; turn on ability to toggle files in a directoy')
    parser.add_argument(
        '-s', '--show',
        action='store_true',
        help='show results of toggle by printing contents')
    parser.add_argument(
        '-t', '--trial',
        action='store_true',
        help='trial run will leave results in .toggle files')
    parser.add_argument(
        'targets',
        default=[os.getcwd()],
        nargs='*',
        help='default="%(default)s"; list of glob expressions to toggle')
    ns = parser.parse_args()
    toggle(ns)
